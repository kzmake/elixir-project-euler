defmodule Euler.Problem002 do
  @moduledoc """
  フィボナッチ数列の偶数値の項の総和を計算
  """

  @doc """
  Each new term in the Fibonacci sequence is generated by adding the previous two terms.
  By starting with 1 and 2, the first 10 terms will be:

    1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

  By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.

  ## Examples

      iex> FibonacciFactory.create(400_0000) |> Euler.Problem002.solve
      4613732
  """
  require Integer

  def solve(nums) when is_list(nums) do
    nums
    |> Enum.filter(fn x -> Integer.is_even(x) end)
    |> Enum.sum
  end
end


defmodule FibonacciFactory do
  @moduledoc """
  フィボナッチ数列を作成
  """

  @doc """
  指定した値以下の項までのフィボナッチ数列を作成
  """
  def create(upper) when upper > 0 do
    fibs = Stream.unfold({1, 2}, fn {a, b} -> {a, {b, a + b}} end)

    fibs
    |> Enum.take_while(fn x -> x < upper end)
  end
end
